# config/packages/security.yaml
security:
  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    app_user_provider:
      entity:
        class: App\Entity\User
        property: email # Assuming users log in with their email

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    register:
      pattern: ^/api/register
      methods: [ POST ]  # Ensure this matches your actual method used
      security: false
    login:
      pattern: ^/api/login
      access_token:
        token_handler: App\Security\ApiTokenHandler
      json_login:
        check_path: /api/login
        username_path: email
        password_path: password
        success_handler: App\Security\LoginSuccessHandler
        failure_handler: App\Security\LoginFailureHandler

    main:
      access_token:
        token_handler: App\Security\ApiTokenHandler

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }